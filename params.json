{"name":"Git-deploy","tagline":"Server side and client side Git deployement tool","body":"# git-deploy\r\n\r\n## Description\r\n\r\ngit-deploy is a deployment tool to allow for quick and easy deployments based on\r\nthe changes in a git repository, from git server on `git push` command or manualy from client:\r\n\r\n![Animation of active deploy](https://gist.github.com/Salamek/6412607/raw/a8942ce9a0b6d638a70caf9618e97cd8b31f87b1/anim.gif)\r\n\r\ngit-deploy supports deployment over SSH and FTP/S\r\n\r\n## Installation\r\n\r\ngit-deploy requires PHP5.3 >, PHP was chosen becouse this tool was primary created for company where PHP is main\r\nlanguage and use any other language would make maintance and further developement very hard for this company.\r\n\r\n### Depedencies\r\n* `PECL SSL` for SSH support\r\n\r\n### Client\r\n\r\nFor deploy from client side, copy `git-deploy` into `/usr/bin` just run `git deploy` from git root directory.\r\n\r\n### Server\r\n\r\nFor server deployment proceed as for client and simlink `/usr/bin/git-deploy` AS `post-receive` in hooks directory, this GIT server implementations are supported and tested:\r\n\r\n* [Gitlab](http://gitlab.org/) \r\n\r\n\r\n## Usage\r\n\r\nIn the root directory of your source code, create a <code>deploy.ini</code> file.\r\n\r\nHere is a sample code for FTP acces (port can be omitted):\r\n\r\n    ;target configuration\r\n    [deploy]    \r\n    ;;protocols can be sftp for SSH (SCP), ftp or ftps for FTP or secure FTP\r\n    target = 'ftp://user:password@example.com:21/path/to/deploy'\r\n    ;or private key auth over SSH :\r\n    ;target = 'sftp://user@example.com:22/path/to/deploy'\r\n    ;;deploy a project or not\r\n    deploy = true\r\n    ;Optional, email of maintainer to recieve info about deploy errors\r\n    maintainer = adam.schubert@example.com\r\n    ;Optional, use this to trigger remote host on remote server, eg for cache flushing\r\n    ;remote_hook = http://www.example.com\r\n\r\n;Optional, Special rights for files relative to git root\r\n[file_rights]\r\ndir/file/* = 777\r\ndir/file = 775\r\n\r\n## How It Works\r\n\r\n`git-deploy` stores file called `REVISION` on your server inside the root path to your application.\r\nThis file stores the current revision of your application residing on your server.\r\n\r\nWhen you run a `git deploy`, `git-deploy` downloads the `REVISION` file, and checks to see what\r\nfiles are different between revisions and either upload the changed files or delete them from the server.\r\n","google":"UA-39074555-2","note":"Don't delete this file! It's used internally to help with page regeneration."}