#!/bin/bash
### BEGIN INIT INFO
# Provides:          git-deploy
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     false
# Short-Description: Start/stop git-deploy server
### END INIT INFO

# git-deploy daemon
# chkconfig: 345 20 80
# description: git-deploy daemon
# processname: git-deploy

. /lib/lsb/init-functions

DAEMON_PATH="/usr/bin/"

DAEMON="git-deploy server"

NAME=git-deploy
DESC="Git deployement tool"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

case "$1" in
start)
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                log_action_msg "$PIDFILE exists..."
            else
                log_action_msg "$NAME is running"
                exit 0
            fi
        fi
        log_daemon_msg "Starting $NAME" "$DAEMON"

        cd $DAEMON_PATH
        $DAEMON > /dev/null 2>&1 &
        PID=$!
        if [ -z $PID ]; then
            log_end_msg 1
        else
            echo $PID > $PIDFILE
            log_end_msg 0
        fi
;;
status)
        log_action_msg "Checking $NAME..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                log_action_msg "Process dead but pidfile exists"
                exit 3
            else
                log_action_msg "$NAME is running"
            fi
        else
            log_action_msg "$NAME is not running"
            exit 3
        fi
;;
stop)
        log_daemon_msg "Stopping $NAME"
        cd $DAEMON_PATH
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            kill -HUP $PID
            log_end_msg 0
            rm -f $PIDFILE
        else
            log_action_msg "pidfile not found, maybe $NAME is not running ? check it by pgrep to be sure"
            log_end_msg 0
        fi
;;

restart)
        $0 stop
        $0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac
